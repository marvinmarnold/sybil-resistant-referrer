{
	"id": "396a828ee8f10c9899b4e352ac9577c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"lzApp/util/ExcessivelySafeCall.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.7.6;\n\nlibrary ExcessivelySafeCall {\n    uint256 constant LOW_28_MASK =\n    0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeCall(\n        address _target,\n        uint256 _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal returns (bool, bytes memory) {\n        // set up for assembly call\n        uint256 _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := call(\n            _gas, // gas\n            _target, // recipient\n            0, // ether value\n            add(_calldata, 0x20), // inloc\n            mload(_calldata), // inlen\n            0, // outloc\n            0 // outlen\n            )\n        // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n        // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n        // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeStaticCall(\n        address _target,\n        uint256 _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal view returns (bool, bytes memory) {\n        // set up for assembly call\n        uint256 _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := staticcall(\n            _gas, // gas\n            _target, // recipient\n            add(_calldata, 0x20), // inloc\n            mload(_calldata), // inlen\n            0, // outloc\n            0 // outlen\n            )\n        // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n        // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n        // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /**\n     * @notice Swaps function selectors in encoded contract calls\n     * @dev Allows reuse of encoded calldata for functions with identical\n     * argument types but different names. It simply swaps out the first 4 bytes\n     * for the new selector. This function modifies memory in place, and should\n     * only be used with caution.\n     * @param _newSelector The new 4-byte selector\n     * @param _buf The encoded contract args\n     */\n    function swapSelector(bytes4 _newSelector, bytes memory _buf)\n    internal\n    pure\n    {\n        require(_buf.length >= 4);\n        uint256 _mask = LOW_28_MASK;\n        assembly {\n        // load the first word of\n            let _word := mload(add(_buf, 0x20))\n        // mask out the top 4 bytes\n        // /x\n            _word := and(_word, _mask)\n            _word := or(_newSelector, _word)\n            mstore(add(_buf, 0x20), _word)\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lzApp/util/ExcessivelySafeCall.sol": {
				"ExcessivelySafeCall": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lzApp/util/ExcessivelySafeCall.sol\":72:5405  library ExcessivelySafeCall {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lzApp/util/ExcessivelySafeCall.sol\":72:5405  library ExcessivelySafeCall {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201598466f98911a94dcbd2a42a52cacab6a50061f076997d7afa9223fef92ccd464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201598466f98911a94dcbd2a42a52cacab6a50061f076997d7afa9223fef92ccd464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO SWAP9 CHAINID PUSH16 0x98911A94DCBD2A42A52CACAB6A50061F SMOD PUSH10 0x97D7AFA9223FEF92CCD4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "72:5333:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201598466f98911a94dcbd2a42a52cacab6a50061f076997d7afa9223fef92ccd464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO SWAP9 CHAINID PUSH16 0x98911A94DCBD2A42A52CACAB6A50061F SMOD PUSH10 0x97D7AFA9223FEF92CCD4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "72:5333:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"excessivelySafeCall(address,uint256,uint16,bytes memory)": "infinite",
								"excessivelySafeStaticCall(address,uint256,uint16,bytes memory)": "infinite",
								"swapSelector(bytes4,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72,
									"end": 5405,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201598466f98911a94dcbd2a42a52cacab6a50061f076997d7afa9223fef92ccd464736f6c63430008130033",
									".code": [
										{
											"begin": 72,
											"end": 5405,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 5405,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"lzApp/util/ExcessivelySafeCall.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lzApp/util/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lzApp/util/ExcessivelySafeCall.sol\":{\"keccak256\":\"0xe0f9373c55ec09caee9b20b22291f0bde6dd22a5cf48bd1b67cfb35b1580468c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://831108bbffd3eb63bef63eeebf421d699b6973d0c73b6ed92fd4a68c6f834901\",\"dweb:/ipfs/QmbWLv8rUEkkLuFGMTRqum67jBsMAtv7wjFzDRDfDLfcB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lzApp/util/ExcessivelySafeCall.sol": {
				"ast": {
					"absolutePath": "lzApp/util/ExcessivelySafeCall.sol",
					"exportedSymbols": {
						"ExcessivelySafeCall": [
							96
						]
					},
					"id": 97,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ExcessivelySafeCall",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 96,
							"linearizedBaseContracts": [
								96
							],
							"name": "ExcessivelySafeCall",
							"nameLocation": "80:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "LOW_28_MASK",
									"nameLocation": "123:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "106:101:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "106:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "141:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9215"
										},
										"value": "0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "1295:1063:0",
										"statements": [
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "_toCopy",
														"nameLocation": "1349:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "1341:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 20,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 22,
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:15:0"
											},
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "_success",
														"nameLocation": "1371:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "1366:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 23,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"nodeType": "VariableDeclarationStatement",
												"src": "1366:13:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "_returnData",
														"nameLocation": "1402:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "1389:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 26,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1389:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [
														{
															"id": 30,
															"name": "_maxCopy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1426:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 28,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1420:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1389:46:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1664:648:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1678:251:0",
															"value": {
																"arguments": [
																	{
																		"name": "_gas",
																		"nodeType": "YulIdentifier",
																		"src": "1708:4:0"
																	},
																	{
																		"name": "_target",
																		"nodeType": "YulIdentifier",
																		"src": "1733:7:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "1801:9:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1812:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1797:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "1846:9:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1840:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1840:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1879:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "1690:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:239:0"
															},
															"variableNames": [
																{
																	"name": "_success",
																	"nodeType": "YulIdentifier",
																	"src": "1678:8:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1981:27:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "1992:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:16:0"
															},
															"variableNames": [
																{
																	"name": "_toCopy",
																	"nodeType": "YulIdentifier",
																	"src": "1981:7:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2046:51:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2064:19:0",
																		"value": {
																			"name": "_maxCopy",
																			"nodeType": "YulIdentifier",
																			"src": "2075:8:0"
																		},
																		"variableNames": [
																			{
																				"name": "_toCopy",
																				"nodeType": "YulIdentifier",
																				"src": "2064:7:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2027:7:0"
																	},
																	{
																		"name": "_maxCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2036:8:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2024:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:21:0"
															},
															"nodeType": "YulIf",
															"src": "2021:76:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_returnData",
																		"nodeType": "YulIdentifier",
																		"src": "2165:11:0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2178:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_returnData",
																				"nodeType": "YulIdentifier",
																				"src": "2271:11:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2284:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2267:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2267:22:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "2294:7:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2252:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:50:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2252:50:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "1801:9:0",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "1846:9:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1708:4:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "2036:8:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "2075:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2165:11:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2271:11:0",
														"valueSize": 1
													},
													{
														"declaration": 24,
														"isOffset": false,
														"isSlot": false,
														"src": "1678:8:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "1733:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "1981:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2027:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2178:7:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2294:7:0",
														"valueSize": 1
													}
												],
												"id": 33,
												"nodeType": "InlineAssembly",
												"src": "1655:657:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 34,
															"name": "_success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2329:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 35,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2339:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 36,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2328:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 19,
												"id": 37,
												"nodeType": "Return",
												"src": "2321:30:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "214:899:0",
										"text": "@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."
									},
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excessivelySafeCall",
									"nameLocation": "1127:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "1164:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1156:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_gas",
												"nameLocation": "1189:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_maxCopy",
												"nameLocation": "1210:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 10,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "1241:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1228:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:110:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1275:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 15,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1281:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 17,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:20:0"
									},
									"scope": 96,
									"src": "1118:1240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3456:1039:0",
										"statements": [
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "_toCopy",
														"nameLocation": "3510:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "3502:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 55,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 57,
												"nodeType": "VariableDeclarationStatement",
												"src": "3502:15:0"
											},
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "_success",
														"nameLocation": "3532:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "3527:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 58,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3527:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 60,
												"nodeType": "VariableDeclarationStatement",
												"src": "3527:13:0"
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "_returnData",
														"nameLocation": "3563:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "3550:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 61,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"id": 65,
															"name": "_maxCopy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "3587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3577:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 63,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3581:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3577:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3550:46:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3825:624:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3839:227:0",
															"value": {
																"arguments": [
																	{
																		"name": "_gas",
																		"nodeType": "YulIdentifier",
																		"src": "3875:4:0"
																	},
																	{
																		"name": "_target",
																		"nodeType": "YulIdentifier",
																		"src": "3900:7:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3949:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "3983:9:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3977:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3977:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4016:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4041:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "3851:10:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3851:215:0"
															},
															"variableNames": [
																{
																	"name": "_success",
																	"nodeType": "YulIdentifier",
																	"src": "3839:8:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4118:27:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "4129:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4129:16:0"
															},
															"variableNames": [
																{
																	"name": "_toCopy",
																	"nodeType": "YulIdentifier",
																	"src": "4118:7:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4183:51:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4201:19:0",
																		"value": {
																			"name": "_maxCopy",
																			"nodeType": "YulIdentifier",
																			"src": "4212:8:0"
																		},
																		"variableNames": [
																			{
																				"name": "_toCopy",
																				"nodeType": "YulIdentifier",
																				"src": "4201:7:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4164:7:0"
																	},
																	{
																		"name": "_maxCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4173:8:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4161:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4161:21:0"
															},
															"nodeType": "YulIf",
															"src": "4158:76:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_returnData",
																		"nodeType": "YulIdentifier",
																		"src": "4302:11:0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4315:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4295:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_returnData",
																				"nodeType": "YulIdentifier",
																				"src": "4408:11:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4421:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:22:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "4431:7:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4389:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:50:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4389:50:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 48,
														"isOffset": false,
														"isSlot": false,
														"src": "3938:9:0",
														"valueSize": 1
													},
													{
														"declaration": 48,
														"isOffset": false,
														"isSlot": false,
														"src": "3983:9:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "3875:4:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "4173:8:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "4212:8:0",
														"valueSize": 1
													},
													{
														"declaration": 62,
														"isOffset": false,
														"isSlot": false,
														"src": "4302:11:0",
														"valueSize": 1
													},
													{
														"declaration": 62,
														"isOffset": false,
														"isSlot": false,
														"src": "4408:11:0",
														"valueSize": 1
													},
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "3839:8:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "3900:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4164:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4201:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4315:7:0",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "4431:7:0",
														"valueSize": 1
													}
												],
												"id": 68,
												"nodeType": "InlineAssembly",
												"src": "3816:633:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 69,
															"name": "_success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "4466:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 70,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "4476:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 71,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4465:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 54,
												"id": 72,
												"nodeType": "Return",
												"src": "4458:30:0"
											}
										]
									},
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "2364:899:0",
										"text": "@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excessivelySafeStaticCall",
									"nameLocation": "3277:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "3320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_gas",
												"nameLocation": "3345:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3337:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_maxCopy",
												"nameLocation": "3366:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3359:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 45,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "3397:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3384:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 47,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3384:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:110:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3442:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3442:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:20:0"
									},
									"scope": 96,
									"src": "3268:1227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "5036:367:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 83,
																	"name": "_buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "5054:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5059:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5054:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "34",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"src": "5054:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5046:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "5046:25:0"
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "_mask",
														"nameLocation": "5089:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "5081:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "LOW_28_MASK",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "5097:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5081:27:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5127:270:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5175:35:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_buf",
																				"nodeType": "YulIdentifier",
																				"src": "5198:4:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5204:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5194:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5194:15:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5188:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:22:0"
															},
															"variables": [
																{
																	"name": "_word",
																	"nodeType": "YulTypedName",
																	"src": "5179:5:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5273:26:0",
															"value": {
																"arguments": [
																	{
																		"name": "_word",
																		"nodeType": "YulIdentifier",
																		"src": "5286:5:0"
																	},
																	{
																		"name": "_mask",
																		"nodeType": "YulIdentifier",
																		"src": "5293:5:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:17:0"
															},
															"variableNames": [
																{
																	"name": "_word",
																	"nodeType": "YulIdentifier",
																	"src": "5273:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "_newSelector",
																		"nodeType": "YulIdentifier",
																		"src": "5324:12:0"
																	},
																	{
																		"name": "_word",
																		"nodeType": "YulIdentifier",
																		"src": "5338:5:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5321:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:23:0"
															},
															"variableNames": [
																{
																	"name": "_word",
																	"nodeType": "YulIdentifier",
																	"src": "5312:5:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_buf",
																				"nodeType": "YulIdentifier",
																				"src": "5368:4:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5374:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5364:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5364:15:0"
																	},
																	{
																		"name": "_word",
																		"nodeType": "YulIdentifier",
																		"src": "5381:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:30:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5357:30:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 79,
														"isOffset": false,
														"isSlot": false,
														"src": "5198:4:0",
														"valueSize": 1
													},
													{
														"declaration": 79,
														"isOffset": false,
														"isSlot": false,
														"src": "5368:4:0",
														"valueSize": 1
													},
													{
														"declaration": 90,
														"isOffset": false,
														"isSlot": false,
														"src": "5293:5:0",
														"valueSize": 1
													},
													{
														"declaration": 77,
														"isOffset": false,
														"isSlot": false,
														"src": "5324:12:0",
														"valueSize": 1
													}
												],
												"id": 93,
												"nodeType": "InlineAssembly",
												"src": "5118:279:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "4501:442:0",
										"text": " @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapSelector",
									"nameLocation": "4957:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_newSelector",
												"nameLocation": "4977:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4970:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 76,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4970:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_buf",
												"nameLocation": "5004:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4991:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4969:40:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5036:0:0"
									},
									"scope": 96,
									"src": "4948:455:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 97,
							"src": "72:5333:0",
							"usedErrors": []
						}
					],
					"src": "46:5359:0"
				},
				"id": 0
			}
		}
	}
}