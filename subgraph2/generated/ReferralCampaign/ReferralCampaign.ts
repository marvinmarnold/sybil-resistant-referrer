// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptedReferral extends ethereum.Event {
  get params(): AcceptedReferral__Params {
    return new AcceptedReferral__Params(this);
  }
}

export class AcceptedReferral__Params {
  _event: AcceptedReferral;

  constructor(event: AcceptedReferral) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get param1(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReferrerAdded extends ethereum.Event {
  get params(): ReferrerAdded__Params {
    return new ReferrerAdded__Params(this);
  }
}

export class ReferrerAdded__Params {
  _event: ReferrerAdded;

  constructor(event: ReferrerAdded) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ReferralCampaign extends ethereum.SmartContract {
  static bind(address: Address): ReferralCampaign {
    return new ReferralCampaign("ReferralCampaign", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rewardToken(): Address {
    let result = super.call("rewardToken", "rewardToken():(address)", []);

    return result[0].toAddress();
  }

  try_rewardToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("rewardToken", "rewardToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AcceptReferralCall extends ethereum.Call {
  get inputs(): AcceptReferralCall__Inputs {
    return new AcceptReferralCall__Inputs(this);
  }

  get outputs(): AcceptReferralCall__Outputs {
    return new AcceptReferralCall__Outputs(this);
  }
}

export class AcceptReferralCall__Inputs {
  _call: AcceptReferralCall;

  constructor(call: AcceptReferralCall) {
    this._call = call;
  }

  get _referrer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get signal(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get root(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class AcceptReferralCall__Outputs {
  _call: AcceptReferralCall;

  constructor(call: AcceptReferralCall) {
    this._call = call;
  }
}

export class AddReferrerCall extends ethereum.Call {
  get inputs(): AddReferrerCall__Inputs {
    return new AddReferrerCall__Inputs(this);
  }

  get outputs(): AddReferrerCall__Outputs {
    return new AddReferrerCall__Outputs(this);
  }
}

export class AddReferrerCall__Inputs {
  _call: AddReferrerCall;

  constructor(call: AddReferrerCall) {
    this._call = call;
  }

  get signal(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get root(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class AddReferrerCall__Outputs {
  _call: AddReferrerCall;

  constructor(call: AddReferrerCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _campaignTokenContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _rewardTokenContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _maxReferralsPerReferrer(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _rewardReferrer(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _rewardReferee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _minCampaignTokenBalance(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _worldId(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _appId(): string {
    return this._call.inputValues[8].value.toString();
  }

  get _actionId(): string {
    return this._call.inputValues[9].value.toString();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VerifyAndExecuteCall extends ethereum.Call {
  get inputs(): VerifyAndExecuteCall__Inputs {
    return new VerifyAndExecuteCall__Inputs(this);
  }

  get outputs(): VerifyAndExecuteCall__Outputs {
    return new VerifyAndExecuteCall__Outputs(this);
  }
}

export class VerifyAndExecuteCall__Inputs {
  _call: VerifyAndExecuteCall;

  constructor(call: VerifyAndExecuteCall) {
    this._call = call;
  }

  get signal(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get root(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class VerifyAndExecuteCall__Outputs {
  _call: VerifyAndExecuteCall;

  constructor(call: VerifyAndExecuteCall) {
    this._call = call;
  }
}
